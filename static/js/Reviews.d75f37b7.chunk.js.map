{"version":3,"file":"static/js/Reviews.d75f37b7.chunk.js","mappings":"4KAEaA,EAAUC,EAAAA,QAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAMpBC,EAAeJ,EAAAA,QAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qD,SCQpC,MAXA,SAAmBI,GAAa,IAAVC,EAAKD,EAALC,MACpB,OACEC,EAAAA,EAAAA,MAACV,EAAO,CAAAW,SAAA,EACNC,EAAAA,EAAAA,KAAA,OAAKC,I,s7XAAoBC,IAAI,yBAC7BF,EAAAA,EAAAA,KAACP,EAAY,CAAAM,SACL,OAALF,QAAK,IAALA,EAAAA,EAAS,6CAIlB,C,+MCZaM,EAAcd,EAAAA,QAAOe,GAAEb,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAIvBa,EAAahB,EAAAA,QAAOiB,GAAEX,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iEAMtBe,EAASlB,EAAAA,QAAOmB,GAAEC,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,kC,SCyD/B,MAzDA,WACE,IAAAkB,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCvB,EAAKwB,EAAA,GAAEC,EAAQD,EAAA,GAEhBE,GADWC,EAAAA,EAAAA,MAATC,KACaC,MAAM,iBAAiB,GA8B5C,OA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACC,SAAAC,IAmBvB,OAnBuBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAEIpB,GAAW,GAAMmB,EAAAE,KAAA,GACSC,EAAAA,EAAAA,GAAU,CAClCC,OAAQ,eACRnB,QAAAA,EACAK,WAAY,CAAEe,OAAQf,EAAWe,UAChC,KAAD,EAAAR,EAAAG,EAAAM,KAJMR,EAAOD,EAAPC,QAKRrB,GAAU8B,EAAAA,EAAAA,GAAKT,IAAUE,EAAAE,KAAA,mBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,UAErBS,EAAAA,EAAMC,SAAQV,EAAAQ,IAAI,CAADR,EAAAE,KAAA,gBAAAF,EAAAW,OAAA,kBAGrB3B,EAASgB,EAAAQ,GAAEI,UACXC,EAAAA,EAAAA,IAAkBb,EAAAQ,GAAEI,SACpBnC,EAAW,IAAI,QAEG,OAFHuB,EAAAC,KAAA,GAEfpB,GAAW,GAAOmB,EAAAc,OAAA,6BAAAd,EAAAe,OAAA,GAAAnB,EAAA,yBAErBoB,MAAA,KAAAC,UAAA,CAED,OAtByC,WACjBzB,EAAAwB,MAAC,KAADC,UAAA,CAoBxBC,GACO,WACL5B,EAAW6B,OACb,CACF,GAAG,CAAClC,KAGFzB,EAAAA,EAAAA,MAAA4D,EAAAA,SAAA,CAAA3D,SAAA,CACGmB,IAAWlB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,CAACzC,QAASA,KACrB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,QAAS,IACjB5D,EAAAA,EAAAA,KAACG,EAAW,CAAAJ,SACTe,EAAQ+C,KAAI,SAAAjE,GAAA,IAAGkE,EAAElE,EAAFkE,GAAIC,EAAMnE,EAANmE,OAAQC,EAAOpE,EAAPoE,QAAO,OACjClE,EAAAA,EAAAA,MAACO,EAAU,CAAAN,SAAA,EACTC,EAAAA,EAAAA,KAACO,EAAM,CAAAR,SAAA,GAAAkE,OAAKF,MACZ/D,EAAAA,EAAAA,KAAA,KAAAD,SAAA,GAAAkE,OAAOD,OAFQF,EAGJ,MAIE,KAAb,OAAPhD,QAAO,IAAPA,OAAO,EAAPA,EAAS8C,UACR5D,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CACTrE,MAAY,OAALA,QAAK,IAALA,EAAAA,EAAS,+CAK1B,C,0HCjEMsE,EAAW,+BAIXC,EAAc,CAClBC,QAAS,IACTC,OAAQ,CACNC,SAAU,QACVC,QANQ,oCAQVC,QAAS,CACPC,OAAQ,qBAICC,EAAiB,8BAEvB,SAAelC,EAASmC,GAAA,OAAAC,EAAAvB,MAAC,KAADC,UAAA,CAkB9B,SAAAsB,IAAA,OAAAA,GAAA9C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAlBM,SAAAC,EAAAtC,GAAA,IAAA8C,EAAAoC,EAAAvD,EAAAwD,EAAAnD,EAAAoD,EAAAV,EAAAW,EAAAC,EAAAC,EAAA,OAAAnD,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASU,OARfE,EAAM9C,EAAN8C,OAAMoC,EAAAlF,EACN2B,QAAAA,OAAO,IAAAuD,EAAG,KAAIA,EAAAC,EAAAnF,EACdgC,WAAAA,OAAU,IAAAmD,EAAG,CAAC,EAACA,EAAAC,EAAApF,EACf0E,OAAAA,OAAM,IAAAU,EAAG,CAAC,EAACA,EAELC,GAAYG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbhB,GAAW,IACdE,QAAMc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOhB,EAAYE,QAAWA,IACjC1C,GAAUU,EAAAE,KAAA,EAGQO,EAAAA,EAAMsC,IAAI,GAADpB,OAC3BE,GAAQF,OAAGqB,EAAe5C,EAAQnB,IACrC0D,GACA,KAAD,EAHW,OAGXC,EAAA5C,EAAAM,KAHOuC,EAAID,EAAJC,KAAI7C,EAAAW,OAAA,SAKLkC,GAAI,wBAAA7C,EAAAe,OAAA,GAAAnB,EAAA,MACZoB,MAAA,KAAAC,UAAA,CAED,SAAS+B,EAAe5C,EAAQoB,GAC9B,OAAQpB,GACN,IAAK,WACH,MAAO,sBACT,IAAK,SACH,MAAO,gBACT,IAAK,eACH,MAAM,UAANuB,OAAiBH,GACnB,IAAK,eACH,MAAM,UAANG,OAAiBH,EAAE,YACrB,IAAK,eACH,MAAM,UAANG,OAAiBH,EAAE,YACrB,QACE,OAEN,C,wJChDMyB,EAAiB,CACrBlB,QAAS,KACTmB,MAAO,OACPC,SALAC,KAAKC,MAA0B,MAApBC,OAAOC,YAAuB,KAMzCC,SAAU,OACVC,aAAc,OACdC,kBAAmB,QAEfC,EAAiB,CACrBC,QAAS,QACTC,SAAU,WAGL,SAASC,EAAWC,GACzB,OAAOC,EAAAA,OAAOC,QAAQ,oBAADtC,OACCoC,EAAK,YACzBd,EAEJ,CAEO,SAASpC,IAEb,IADDqD,EAAGjD,UAAAK,OAAA,QAAA6C,IAAAlD,UAAA,GAAAA,UAAA,GAAG,kCAEN,OAAO+C,EAAAA,OAAOI,QAAQF,EAAKjB,EAC7B,CAEO,SAASoB,IACd,OAAOC,EAAAA,QAAQC,UAAUZ,EAC3B,CAEO,SAASa,IACd,OAAOF,EAAAA,QAAQG,QACjB,C","sources":["components/BadRequest/BadRequest.styled.js","components/BadRequest/BadRequest.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api/api.js","services/notifications/notifications.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  margin-left: 30px;\n  width: 350px;\n`;\n\nexport const ErrorMessage = styled.p`\n  margin-top: 20px;\n\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Wrapper, ErrorMessage } from './BadRequest.styled';\nimport movieNotFound from 'images/movie_not_found.jpg';\n\nfunction BadRequest({ error }) {\n  return (\n    <Wrapper>\n      <img src={movieNotFound} alt=\"Movie not found.jpg\" />\n      <ErrorMessage>\n        {error ?? 'Sorry, your query returned no matches.'}\n      </ErrorMessage>\n    </Wrapper>\n  );\n}\n\nexport default BadRequest;\n\nBadRequest.propTypes = {\n  error: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ListReviews = styled.ul`\n  padding: 30px;\n`;\n\nexport const ItemReview = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Author = styled.h2`\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { getMovies } from 'services/api';\nimport { validationRequest } from 'services/notifications';\n\nimport Loader from 'components/Loader';\nimport BadRequest from 'components/BadRequest';\n\nimport { ListReviews, ItemReview, Author } from './Reviews.styled';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [error, setError] = useState(null);\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-zA-Z0-9]+$/)[0];\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchData() {\n      try {\n        setVisible(true);\n        const { results } = await getMovies({\n          action: 'movieReviews',\n          movieId,\n          controller: { signal: controller.signal },\n        });\n        setReviews([...results]);\n      } catch (e) {\n        if (axios.isCancel(e)) {\n          return;\n        }\n        setError(e.message);\n        validationRequest(e.message);\n        setReviews([]);\n      } finally {\n        setVisible(false);\n      }\n    }\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {visible && <Loader visible={visible} />}\n      {reviews?.length > 0 && (\n        <ListReviews>\n          {reviews.map(({ id, author, content }) => (\n            <ItemReview key={id}>\n              <Author>{`${author}`}</Author>\n              <p>{`${content}`}</p>\n            </ItemReview>\n          ))}\n        </ListReviews>\n      )}\n      {reviews?.length === 0 && (\n        <BadRequest\n          error={error ?? 'There are no reviews for this movie yet.'}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'b5edf42d0c828c3abea97e9ad1ce315b';\n\nconst BASE_PARAMS = {\n  timeout: 5000,\n  params: {\n    language: 'en-US',\n    api_key: KEY,\n  },\n  headers: {\n    accept: 'application/json',\n  },\n};\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport async function getMovies({\n  action,\n  movieId = null,\n  controller = {},\n  params = {},\n}) {\n  const searchParams = {\n    ...BASE_PARAMS,\n    params: { ...BASE_PARAMS.params, ...params },\n    ...controller,\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}${searchEndpoint(action, movieId)}`,\n    searchParams\n  );\n\n  return data;\n}\n\nfunction searchEndpoint(action, id) {\n  switch (action) {\n    case 'trending':\n      return '/trending/movie/day';\n    case 'search':\n      return '/search/movie';\n    case 'movieDetails':\n      return `/movie/${id}`;\n    case 'movieCredits':\n      return `/movie/${id}/credits`;\n    case 'movieReviews':\n      return `/movie/${id}/reviews`;\n    default:\n      return;\n  }\n}\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst adaptiveFontSize =\n  Math.round(window.innerWidth * 0.0153) + 'px';\n\nconst messageOptions = {\n  timeout: 2500,\n  width: '30vw',\n  fontSize: adaptiveFontSize,\n  distance: '35px',\n  borderRadius: '10px',\n  cssAnimationStyle: 'zoom',\n};\nconst loadingOptions = {\n  svgSize: '160px',\n  svgColor: '#0000FF',\n};\n\nexport function findMovies(query) {\n  return Notify.success(\n    `Hooray! We found ${query} movies.`,\n    messageOptions\n  );\n}\n\nexport function validationRequest(\n  msg = 'Change search.Please try again.'\n) {\n  return Notify.failure(msg, messageOptions);\n}\n\nexport function showLoading() {\n  return Loading.hourglass(loadingOptions);\n}\n\nexport function loadingRemove() {\n  return Loading.remove();\n}\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","ErrorMessage","p","_templateObject2","_ref","error","_jsxs","children","_jsx","src","alt","ListReviews","ul","ItemReview","li","Author","h2","_templateObject3","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","visible","setVisible","_useState5","_useState6","setError","movieId","useParams","slug","match","useEffect","controller","AbortController","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovies","results","wrap","_context","prev","next","getMovies","action","signal","sent","_toConsumableArray","t0","axios","isCancel","abrupt","message","validationRequest","finish","stop","apply","arguments","fetchData","abort","_Fragment","Loader","length","map","id","author","content","concat","BadRequest","BASE_URL","BASE_PARAMS","timeout","params","language","api_key","headers","accept","IMAGE_BASE_URL","_x","_getMovies","_ref$movieId","_ref$controller","_ref$params","searchParams","_yield$axios$get","data","_objectSpread","get","searchEndpoint","messageOptions","width","fontSize","Math","round","window","innerWidth","distance","borderRadius","cssAnimationStyle","loadingOptions","svgSize","svgColor","findMovies","query","Notify","success","msg","undefined","failure","showLoading","Loading","hourglass","loadingRemove","remove"],"sourceRoot":""}