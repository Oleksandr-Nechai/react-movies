{"version":3,"file":"static/js/Cast.99510ab7.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","hooks/useMovieData.js","services/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListActors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${props => props.theme.spacings.gapGallery};\n`;\n\nexport const Actor = styled.li`\n  flex-basis: calc(\n    (100% - 6 * ${props => props.theme.spacings.gapGallery}) / 7\n  );\n\n  border: 1px solid lightgray;\n  border-radius: 6px;\n  overflow: hidden;\n\n  box-shadow: ${props => props.theme.shadow.mainShadow};\n`;\n\nexport const Poster = styled.div`\n  height: 300px;\n\n  background-color: ${props => props.theme.colors.primaryColor};\n`;\n\nexport const Image = styled.img`\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  min-height: 40px;\n  padding: 10px;\n\n  background-color: #dbd9d3;\n\n  color: ${props => props.theme.colors.mainBlack};\n  font-weight: bold;\n  font-size: 14px;\n  text-align: center;\n`;\n","import { IMAGE_BASE_URL } from 'services/api';\n\nimport Loader from 'components/Loader';\nimport BadRequest from 'components/BadRequest';\n\nimport { useMovieData } from 'hooks';\n\nimport { ListActors, Actor, Poster, Image, Title } from './Cast.styled';\n\nimport defaultImage from 'images/no-photo.jpg';\n\nfunction Cast() {\n  const [movieInfo, visible, error] = useMovieData('movieCredits');\n\n  const cast = movieInfo ? movieInfo.cast : null;\n\n  return (\n    <>\n      {visible && <Loader visible={visible} />}\n      {cast?.length > 0 && (\n        <ListActors>\n          {cast.map(({ id, profile_path, name }) => (\n            <Actor key={id}>\n              <Poster>\n                <Image\n                  src={\n                    profile_path\n                      ? `${IMAGE_BASE_URL}w200/${profile_path}`\n                      : defaultImage\n                  }\n                  alt={name}\n                />\n              </Poster>\n              <Title>{`${name}`}</Title>\n            </Actor>\n          ))}\n        </ListActors>\n      )}\n      {(cast?.length === 0 || error) && (\n        <BadRequest error={error ?? 'We have no information about the cast.'} />\n      )}\n    </>\n  );\n}\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { getMovies } from 'services/api';\nimport { validationRequest, findMovies } from 'services/notifications';\n\nfunction useMovieData(action) {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [error, setError] = useState(null);\n  const { slug } = useParams();\n\n  const movieId = slug ? slug.match(/[a-zA-Z0-9]+$/)[0] : null;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchData() {\n      try {\n        setVisible(true);\n        const data = await getMovies({\n          action: `${action}`,\n          movieId,\n          controller: { signal: controller.signal },\n        });\n\n        setMovieInfo({ ...data });\n        if (action === 'trending') {\n          findMovies('trending');\n        }\n      } catch (e) {\n        if (axios.isCancel(e)) {\n          return;\n        }\n        setError(e.message);\n        validationRequest(e.message);\n        setMovieInfo(null);\n      } finally {\n        setVisible(false);\n      }\n    }\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [action, movieId]);\n  return [movieInfo, visible, error];\n}\n\nexport { useMovieData };\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'b5edf42d0c828c3abea97e9ad1ce315b';\n\nconst BASE_PARAMS = {\n  timeout: 5000,\n  params: {\n    language: 'en-US',\n    api_key: KEY,\n  },\n  headers: {\n    accept: 'application/json',\n  },\n};\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport async function getMovies({\n  action,\n  movieId = null,\n  controller = {},\n  params = {},\n}) {\n  const searchParams = {\n    ...BASE_PARAMS,\n    params: { ...BASE_PARAMS.params, ...params },\n    ...controller,\n  };\n  const { data } = await axios.get(\n    `${BASE_URL}${searchEndpoint(action, movieId)}`,\n    searchParams\n  );\n  return data;\n}\n\nfunction searchEndpoint(action, id) {\n  switch (action) {\n    case 'trending':\n      return '/trending/movie/day';\n    case 'search':\n      return '/search/movie';\n    case 'movieDetails':\n      return `/movie/${id}`;\n    case 'movieCredits':\n      return `/movie/${id}/credits`;\n    case 'movieReviews':\n      return `/movie/${id}/reviews`;\n    default:\n      return;\n  }\n}\n"],"names":["ListActors","styled","ul","_templateObject","_taggedTemplateLiteral","props","theme","spacings","gapGallery","Actor","li","_templateObject2","shadow","mainShadow","Poster","div","_templateObject3","colors","primaryColor","Image","img","_templateObject4","Title","p","_templateObject5","mainBlack","_useMovieData","useMovieData","_useMovieData2","_slicedToArray","movieInfo","visible","error","cast","_jsxs","_Fragment","children","_jsx","Loader","length","map","_ref","id","profile_path","name","src","concat","IMAGE_BASE_URL","alt","BadRequest","action","_useState","useState","_useState2","setMovieInfo","_useState3","_useState4","setVisible","_useState5","_useState6","setError","slug","useParams","movieId","match","useEffect","controller","AbortController","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMovies","signal","sent","_objectSpread","findMovies","t0","axios","isCancel","abrupt","message","validationRequest","finish","stop","apply","arguments","fetchData","abort","BASE_URL","BASE_PARAMS","timeout","params","language","api_key","headers","accept","_x","_getMovies","_ref$movieId","_ref$controller","_ref$params","searchParams","_yield$axios$get","get","searchEndpoint"],"sourceRoot":""}