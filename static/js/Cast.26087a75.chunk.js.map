{"version":3,"file":"static/js/Cast.26087a75.chunk.js","mappings":"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","sources":["components/BadRequest/BadRequest.styled.js","components/BadRequest/BadRequest.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","hooks/useMovieData.js","services/api/api.js","services/notifications/notifications.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  margin-left: 30px;\n  width: 350px;\n`;\n\nexport const ErrorMessage = styled.p`\n  margin-top: 20px;\n\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Wrapper, ErrorMessage } from './BadRequest.styled';\nimport movieNotFound from 'images/movie_not_found.jpg';\n\nfunction BadRequest({ error }) {\n  return (\n    <Wrapper>\n      <img src={movieNotFound} alt=\"Movie not found.jpg\" />\n      <ErrorMessage>\n        {error ?? 'Sorry, your query returned no matches.'}\n      </ErrorMessage>\n    </Wrapper>\n  );\n}\n\nexport default BadRequest;\n\nBadRequest.propTypes = {\n  error: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ListActors = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${props => props.theme.spacings.gapGallery};\n`;\n\nexport const Actor = styled.li`\n  flex-basis: calc(\n    (100% - 6 * ${props => props.theme.spacings.gapGallery}) / 7\n  );\n\n  border: 1px solid lightgray;\n  border-radius: 6px;\n  overflow: hidden;\n\n  box-shadow: ${props => props.theme.shadow.mainShadow};\n`;\n\nexport const Poster = styled.div`\n  height: 300px;\n\n  background-color: ${props => props.theme.colors.primaryColor};\n`;\n\nexport const Image = styled.img`\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  min-height: 40px;\n  padding: 10px;\n\n  background-color: #dbd9d3;\n\n  color: ${props => props.theme.colors.mainBlack};\n  font-weight: bold;\n  font-size: 14px;\n  text-align: center;\n`;\n","import { IMAGE_BASE_URL } from 'services/api';\n\nimport Loader from 'components/Loader';\nimport BadRequest from 'components/BadRequest';\n\nimport { useMovieData } from 'hooks';\n\nimport { ListActors, Actor, Poster, Image, Title } from './Cast.styled';\n\nimport defaultImage from 'images/no-photo.jpg';\n\nfunction Cast() {\n  const [movieInfo, visible, error] = useMovieData('movieCredits');\n\n  const cast = movieInfo ? movieInfo.cast : null;\n\n  return (\n    <>\n      {visible && <Loader visible={visible} />}\n      {cast?.length > 0 && (\n        <ListActors>\n          {cast.map(({ id, profile_path, name }) => (\n            <Actor key={id}>\n              <Poster>\n                <Image\n                  src={\n                    profile_path\n                      ? `${IMAGE_BASE_URL}w200/${profile_path}`\n                      : defaultImage\n                  }\n                  alt={name}\n                />\n              </Poster>\n              <Title>{`${name}`}</Title>\n            </Actor>\n          ))}\n        </ListActors>\n      )}\n      {(cast?.length === 0 || error) && (\n        <BadRequest error={error ?? 'We have no information about the cast.'} />\n      )}\n    </>\n  );\n}\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { getMovies } from 'services/api';\nimport { validationRequest, findMovies } from 'services/notifications';\n\nfunction useMovieData(action) {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [error, setError] = useState(null);\n  const { slug } = useParams();\n\n  const movieId = slug ? slug.match(/[a-zA-Z0-9]+$/)[0] : null;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchData() {\n      try {\n        setVisible(true);\n        const data = await getMovies({\n          action: `${action}`,\n          movieId,\n          controller: { signal: controller.signal },\n        });\n\n        setMovieInfo({ ...data });\n        if (action === 'trending') {\n          findMovies('trending');\n        }\n      } catch (e) {\n        if (axios.isCancel(e)) {\n          return;\n        }\n        setError(e.message);\n        validationRequest(e.message);\n        setMovieInfo(null);\n      } finally {\n        setVisible(false);\n      }\n    }\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [action, movieId]);\n  return [movieInfo, visible, error];\n}\n\nexport { useMovieData };\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'b5edf42d0c828c3abea97e9ad1ce315b';\n\nconst BASE_PARAMS = {\n  timeout: 5000,\n  params: {\n    language: 'en-US',\n    api_key: KEY,\n  },\n  headers: {\n    accept: 'application/json',\n  },\n};\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport async function getMovies({\n  action,\n  movieId = null,\n  controller = {},\n  params = {},\n}) {\n  const searchParams = {\n    ...BASE_PARAMS,\n    params: { ...BASE_PARAMS.params, ...params },\n    ...controller,\n  };\n  const { data } = await axios.get(\n    `${BASE_URL}${searchEndpoint(action, movieId)}`,\n    searchParams\n  );\n  return data;\n}\n\nfunction searchEndpoint(action, id) {\n  switch (action) {\n    case 'trending':\n      return '/trending/movie/day';\n    case 'search':\n      return '/search/movie';\n    case 'movieDetails':\n      return `/movie/${id}`;\n    case 'movieCredits':\n      return `/movie/${id}/credits`;\n    case 'movieReviews':\n      return `/movie/${id}/reviews`;\n    default:\n      return;\n  }\n}\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst adaptiveFontSize =\n  Math.round(window.innerWidth * 0.0153) + 'px';\n\nconst messageOptions = {\n  timeout: 2500,\n  width: '30vw',\n  fontSize: adaptiveFontSize,\n  distance: '35px',\n  borderRadius: '10px',\n  cssAnimationStyle: 'zoom',\n};\nconst loadingOptions = {\n  svgSize: '160px',\n  svgColor: '#0000FF',\n};\n\nexport function findMovies(query) {\n  return Notify.success(\n    `Hooray! We found ${query} movies.`,\n    messageOptions\n  );\n}\n\nexport function validationRequest(\n  msg = 'Change search.Please try again.'\n) {\n  return Notify.failure(msg, messageOptions);\n}\n\nexport function showLoading() {\n  return Loading.hourglass(loadingOptions);\n}\n\nexport function loadingRemove() {\n  return Loading.remove();\n}\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","ErrorMessage","p","_templateObject2","_ref","error","_jsxs","children","_jsx","src","alt","ListActors","ul","props","theme","spacings","gapGallery","Actor","li","shadow","mainShadow","Poster","_templateObject3","colors","primaryColor","Image","img","_templateObject4","Title","_templateObject5","mainBlack","_useMovieData","useMovieData","_useMovieData2","_slicedToArray","movieInfo","visible","cast","_Fragment","Loader","length","map","id","profile_path","name","concat","IMAGE_BASE_URL","BadRequest","action","_useState","useState","_useState2","setMovieInfo","_useState3","_useState4","setVisible","_useState5","_useState6","setError","slug","useParams","movieId","match","useEffect","controller","AbortController","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMovies","signal","sent","_objectSpread","findMovies","t0","axios","isCancel","abrupt","message","validationRequest","finish","stop","apply","arguments","fetchData","abort","BASE_URL","BASE_PARAMS","timeout","params","language","api_key","headers","accept","_x","_getMovies","_ref$movieId","_ref$controller","_ref$params","searchParams","_yield$axios$get","get","searchEndpoint","messageOptions","width","fontSize","Math","round","window","innerWidth","distance","borderRadius","cssAnimationStyle","loadingOptions","svgSize","svgColor","query","Notify","success","msg","undefined","failure","showLoading","Loading","hourglass","loadingRemove","remove"],"sourceRoot":""}