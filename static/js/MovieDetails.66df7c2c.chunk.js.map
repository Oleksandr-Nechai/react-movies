{"version":3,"file":"static/js/MovieDetails.66df7c2c.chunk.js","mappings":"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","sources":["components/Film/Film.styled.js","services/getColorByValue/getColorByValue.js","components/Film/Film.jsx","pages/MovieDetails/MovieDetails.jsx","styles/sharedStales/SharedStales.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { getColorByValue } from 'services/getColorByValue';\n\nimport { Button } from 'styles/sharedStales';\n\nexport const Wraper = styled.div`\n  position: relative;\n\n  display: flex;\n  padding: 20px;\n\n  background-color: red;\n  background-image: linear-gradient(\n      to right bottom,\n      rgb(35, 24, 24),\n      rgba(35, 24, 24, 0.7)\n    ),\n    url(${props => props.backdrop});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Poster = styled.div`\n  flex-shrink: 0;\n  margin-right: 20px;\n  width: 300px;\n  height: 450px;\n\n  border-radius: 4px;\n\n  overflow: hidden;\n`;\n\nexport const ButtonGoBack = styled(Button)`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n\n  max-width: 300px;\n`;\n\nexport const MovieInfo = styled.div`\n  color: ${props => props.theme.colors.mainWhite};\n  & > *:not(:last-child) {\n    margin-bottom: 20px;\n  }\n  & > h1 {\n    font-size: 28px;\n  }\n`;\n\nexport const Score = styled.span`\n  color: ${props => getColorByValue(props.score)};\n`;\n\nexport const MoreInformation = styled.div`\n  margin: 20px 0;\n\n  padding: 20px;\n  border-top: 2px solid black;\n  border-bottom: 2px solid black;\n`;\n\nexport const ListLink = styled.ul`\n  margin-top: 10px;\n\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ButtonMoreInfo = styled(Button)``;\n","export function getColorByValue(value) {\n  if (value >= 80) {\n    return 'green';\n  } else if (value >= 60) {\n    return 'yellow';\n  } else if (value >= 40) {\n    return 'red';\n  } else {\n    return 'white';\n  }\n}\n","import { useRef, useState, useEffect, Suspense } from 'react';\nimport { useLocation, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Loader from 'components/Loader';\n\nimport { IMAGE_BASE_URL } from 'services/api';\n\nimport defaultImage from 'images/no_poster.jpg';\n\nimport {\n  Wraper,\n  Poster,\n  ButtonGoBack,\n  MovieInfo,\n  Score,\n  MoreInformation,\n  ListLink,\n  ButtonMoreInfo,\n} from './Film.styled';\n\nimport Section from 'components/Section';\n\nfunction Film({ movie }) {\n  const [isLinkEnabled, setLinkEnabled] = useState(true);\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from.location ?? '/');\n  const labelButtonRef = useRef(\n    location.state?.from.label ?? 'to the home page'\n  );\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  const handleButtonClick = () => {\n    setLinkEnabled(false);\n    timeoutRef.current = setTimeout(() => {\n      setLinkEnabled(true);\n    }, 2000);\n  };\n\n  const {\n    vote_average = 0,\n    backdrop_path,\n    poster_path,\n    title,\n    release_date,\n    overview,\n    genres,\n  } = movie;\n\n  const score = Math.round(vote_average * 10);\n\n  return (\n    <Section>\n      <Wraper\n        backdrop={\n          backdrop_path\n            ? `${IMAGE_BASE_URL}w1280/${backdrop_path}`\n            : defaultImage\n        }\n      >\n        <Poster>\n          <img\n            src={\n              poster_path\n                ? `${IMAGE_BASE_URL}w300/${poster_path}`\n                : defaultImage\n            }\n            alt={title}\n          />\n        </Poster>\n        <ButtonGoBack\n          to={backLinkHref.current}\n        >{`Go back ${labelButtonRef.current}`}</ButtonGoBack>\n        <MovieInfo>\n          <h1>{`${title} \n          (${release_date?.slice(0, 4) || '---'})`}</h1>\n          <p>\n            User score: <Score score={score}> {score}%</Score>\n          </p>\n          <h2>Overview:</h2>\n          <p>{overview || 'No data available'}</p>\n          <h2>Genres</h2>\n          <p>\n            {genres?.map(genre => genre.name).join(', ') || 'No data available'}\n          </p>\n        </MovieInfo>\n      </Wraper>\n      <MoreInformation>\n        <h2>Additional Information</h2>\n        <ListLink>\n          <li>\n            <ButtonMoreInfo\n              to=\"cast\"\n              onClick={handleButtonClick}\n              style={isLinkEnabled ? {} : { pointerEvents: 'none' }}\n            >\n              Cast\n            </ButtonMoreInfo>\n          </li>\n          <li>\n            <ButtonMoreInfo\n              to=\"reviews\"\n              onClick={handleButtonClick}\n              style={isLinkEnabled ? {} : { pointerEvents: 'none' }}\n            >\n              Reviews\n            </ButtonMoreInfo>\n          </li>\n        </ListLink>\n      </MoreInformation>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n}\n\nexport default Film;\n\nFilm.propTypes = {\n  movie: PropTypes.shape({\n    vote_average: PropTypes.number,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    backdrop_path: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { getMovies } from 'services/api';\nimport {\n  showLoading,\n  loadingRemove,\n  validationRequest,\n} from 'services/notifications';\n\nimport Film from 'components/Film';\nimport BadRequest from 'components/BadRequest';\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-zA-Z0-9]+$/)[0];\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function fetchData() {\n      try {\n        showLoading();\n        const movieInfo = await getMovies({\n          action: 'movieDetails',\n          movieId,\n          controller: { signal: controller.signal },\n        });\n\n        setMovie({ ...movieInfo });\n      } catch (e) {\n        if (axios.isCancel(e)) {\n          return;\n        }\n        setError(e.message);\n        validationRequest(e.message);\n        setMovie(null);\n      } finally {\n        loadingRemove();\n      }\n    }\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <Film movie={movie} />}\n      {error && <BadRequest error={error} />}\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled(NavLink)`\n  display: inline-block;\n  min-width: 90px;\n\n  padding: 5px 15px;\n  border-radius: 6px;\n  border: 2px black solid;\n\n  text-align: center;\n  font-size: 14px;\n  font-weight: 500;\n\n  cursor: pointer;\n\n  background-color: ${props => props.theme.colors.mainWhite};\n  color: ${props => props.theme.colors.mainBlack};\n\n  transition: background-color 500ms\n      ${props => props.theme.timingFunction.base},\n    color 500ms ${props => props.theme.timingFunction.base};\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.colors.activeColor};\n    color: ${props => props.theme.colors.primaryColor};\n  }\n`;\n"],"names":["Wraper","styled","div","_templateObject","_taggedTemplateLiteral","props","backdrop","Poster","_templateObject2","ButtonGoBack","Button","_templateObject3","MovieInfo","_templateObject4","theme","colors","mainWhite","Score","span","_templateObject5","value","score","MoreInformation","_templateObject6","ListLink","ul","_templateObject7","ButtonMoreInfo","_templateObject8","_ref","_location$state$from$","_location$state","_location$state$from$2","_location$state2","movie","_useState","useState","_useState2","_slicedToArray","isLinkEnabled","setLinkEnabled","location","useLocation","backLinkHref","useRef","state","from","labelButtonRef","label","timeoutRef","useEffect","clearTimeout","current","handleButtonClick","setTimeout","_movie$vote_average","vote_average","backdrop_path","poster_path","title","release_date","overview","genres","Math","round","_jsxs","Section","children","concat","IMAGE_BASE_URL","defaultImage","_jsx","src","alt","to","slice","map","genre","name","join","onClick","style","pointerEvents","Suspense","fallback","Loader","Outlet","setMovie","_useState3","_useState4","error","setError","movieId","useParams","slug","match","controller","AbortController","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieInfo","wrap","_context","prev","next","showLoading","getMovies","action","signal","sent","_objectSpread","t0","axios","isCancel","abrupt","message","validationRequest","loadingRemove","finish","stop","apply","arguments","fetchData","abort","_Fragment","Film","BadRequest","NavLink","mainBlack","timingFunction","base","activeColor","primaryColor"],"sourceRoot":""}