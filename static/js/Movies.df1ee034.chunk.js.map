{"version":3,"file":"static/js/Movies.df1ee034.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","services/formatDate/formatDate.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/api/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieGallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${props => props.theme.spacings.gapGallery};\n`;\n\nexport const Film = styled.li`\n  flex-basis: calc(\n    (100% - 4 * ${props => props.theme.spacings.gapGallery}) / 5\n  );\n\n  border: 1px solid lightgray;\n  border-radius: 6px;\n  overflow: hidden;\n\n  transition: transform 250ms\n      ${props => props.theme.timingFunction.base},\n    box-shadow 250ms ${props => props.theme.timingFunction.base};\n  cursor: pointer;\n  :hover,\n  :focus {\n    transform: scale(1.02);\n    box-shadow: ${props => props.theme.shadow.mainShadow};\n  }\n`;\n\nexport const Poster = styled.div`\n  height: 394px;\n\n  background-color: ${props => props.theme.colors.primaryColor};\n`;\n\nexport const Image = styled.img`\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  min-height: 80px;\n  padding: 10px;\n\n  background-color: #dbd9d3;\n\n  color: ${props => props.theme.colors.mainBlack};\n  font-size: 16px;\n  & > p:first-child {\n    font-weight: bold;\n  }\n`;\n","export function formatDate(dateInput) {\n  const date = new Date(dateInput);\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n  return `${day}.${month}.${year}`;\n}\n","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport slugify from 'slugify';\n\nimport {\n  MovieGallery,\n  Film,\n  Poster,\n  Image,\n  Title,\n} from './MoviesList.styled';\n\nimport { IMAGE_BASE_URL } from 'services/api';\nimport { formatDate } from 'services/formatDate';\n\nimport Section from 'components/Section';\n\nimport defaultImage from 'images/no_poster.jpg';\n\nfunction MoviesList({ movies, name }) {\n  const location = useLocation();\n\n  return (\n    <Section>\n      <MovieGallery>\n        {movies.map(({ id, poster_path, title, release_date }) => (\n          <Film key={id}>\n            <Link\n              to={`/movies/${slugify(`${title} ${id}`, {\n                lower: true,\n                strict: true,\n              })}`}\n              state={{\n                from: {\n                  location,\n                  label: name,\n                },\n              }}\n            >\n              <Poster>\n                <Image\n                  src={\n                    poster_path\n                      ? `${IMAGE_BASE_URL}w300/${poster_path}`\n                      : defaultImage\n                  }\n                  alt={`Poster ${title}`}\n                />\n              </Poster>\n              <Title>\n                <p>{title}</p>\n                <p>\n                  {release_date\n                    ? formatDate(release_date)\n                    : '--.--.--'}\n                </p>\n              </Title>\n            </Link>\n          </Film>\n        ))}\n      </MovieGallery>\n    </Section>\n  );\n}\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  padding: 10px;\n  border-radius: 4px;\n  background-color: ${props => props.theme.colors.primaryColor};\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  overflow: hidden;\n  border-radius: 4px;\n  box-shadow: ${props => props.theme.shadow.mainShadow};\n`;\n\nexport const Input = styled(Field)`\n  padding-left: 30px;\n  height: 20px;\n  border: none;\n  outline: none;\n  ::placeholder {\n    color: ${props => props.theme.colors.primaryColor};\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  position: absolute;\n  top: 0;\n  display: flex;\n  align-items: center;\n  height: 100%;\n  border: none;\n  background-color: ${props => props.theme.colors.mainWhite};\n  cursor: pointer;\n  opacity: 0.6;\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n  :disabled {\n    background-color: ${props => props.theme.colors.primaryColor};\n  }\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { FcSearch } from 'react-icons/fc';\n\nimport { validationRequest } from 'services/notifications';\n\nimport {\n  FormStyled,\n  Container,\n  Input,\n  ButtonStyled,\n} from './Searchbar.styled.js';\n\nfunction Searchbar({ onSubmitForm }) {\n  const handleFormSubmit = ({ nameFilm }, { resetForm }) => {\n    if (!nameFilm.trim()) {\n      return;\n    }\n    onSubmitForm(nameFilm.toLowerCase());\n    resetForm();\n  };\n\n  const initialValues = {\n    nameFilm: '',\n  };\n\n  const SignupSchema = Yup.object({\n    nameFilm: Yup.string()\n      .min(2, 'Too Short!')\n      .max(20, 'Too Long!')\n      .required('Required'),\n  });\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleFormSubmit}\n        validateOnChange={false}\n        validateOnBlur={false}\n        validationSchema={SignupSchema}\n      >\n        <FormStyled>\n          <Container>\n            <label>\n              <Input\n                type=\"text\"\n                name=\"nameFilm\"\n                placeholder=\"Batman\"\n              />\n            </label>\n\n            <ButtonStyled type=\"submit\" aria-label=\"find film\">\n              <FcSearch />\n            </ButtonStyled>\n          </Container>\n          <ErrorMessage\n            name=\"nameFilm\"\n            render={msg => validationRequest(msg)}\n          />\n        </FormStyled>\n      </Formik>\n    </>\n  );\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { getMovies } from 'services/api';\nimport {\n  findMovies,\n  validationRequest,\n  showLoading,\n  loadingRemove,\n} from 'services/notifications';\n\nimport Searchbar from 'components/Searchbar';\nimport MoviesList from 'components/MoviesList';\nimport BadRequest from 'components/BadRequest';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [listMovies, setListMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [name, setName] = useState(null);\n  const onSubmitForm = name => {\n    setSearchParams({ movie: name });\n  };\n\n  useEffect(() => {\n    const movieQuery = searchParams.get('movie');\n\n    if (!movieQuery) {\n      setListMovies(null);\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function fetchData() {\n      try {\n        showLoading();\n        const { results } = await getMovies({\n          action: 'search',\n          params: { query: movieQuery },\n          controller: { signal: controller.signal },\n        });\n\n        if (!results.length) {\n          setError(null);\n          validationRequest();\n          setListMovies([]);\n          return;\n        }\n\n        setListMovies(results);\n        setName(movieQuery);\n        findMovies(movieQuery);\n      } catch (e) {\n        if (axios.isCancel(e)) {\n          return;\n        }\n        setError(e.message);\n        validationRequest(e.message);\n        setListMovies([]);\n      } finally {\n        loadingRemove();\n      }\n    }\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [searchParams]);\n\n  return (\n    <>\n      <Searchbar onSubmitForm={onSubmitForm} />\n      {listMovies?.length > 0 && (\n        <MoviesList\n          movies={listMovies}\n          name={`to the ${name} movies`}\n        />\n      )}\n      {listMovies?.length === 0 && <BadRequest error={error} />}\n    </>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst KEY = 'b5edf42d0c828c3abea97e9ad1ce315b';\n\nconst BASE_PARAMS = {\n  timeout: 5000,\n  params: {\n    language: 'en-US',\n    api_key: KEY,\n  },\n  headers: {\n    accept: 'application/json',\n  },\n};\n\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport async function getMovies({\n  action,\n  movieId = null,\n  controller = {},\n  params = {},\n}) {\n  const searchParams = {\n    ...BASE_PARAMS,\n    params: { ...BASE_PARAMS.params, ...params },\n    ...controller,\n  };\n  const { data } = await axios.get(\n    `${BASE_URL}${searchEndpoint(action, movieId)}`,\n    searchParams\n  );\n  return data;\n}\n\nfunction searchEndpoint(action, id) {\n  switch (action) {\n    case 'trending':\n      return '/trending/movie/day';\n    case 'search':\n      return '/search/movie';\n    case 'movieDetails':\n      return `/movie/${id}`;\n    case 'movieCredits':\n      return `/movie/${id}/credits`;\n    case 'movieReviews':\n      return `/movie/${id}/reviews`;\n    default:\n      return;\n  }\n}\n"],"names":["MovieGallery","styled","ul","_templateObject","_taggedTemplateLiteral","props","theme","spacings","gapGallery","Film","li","_templateObject2","timingFunction","base","shadow","mainShadow","Poster","div","_templateObject3","colors","primaryColor","Image","img","_templateObject4","Title","_templateObject5","mainBlack","formatDate","dateInput","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","_ref","movies","name","location","useLocation","_jsx","Section","children","map","_ref2","id","poster_path","title","release_date","_jsxs","Link","to","slugify","lower","strict","state","from","label","src","IMAGE_BASE_URL","defaultImage","alt","FormStyled","Form","Container","Input","Field","ButtonStyled","button","mainWhite","onSubmitForm","SignupSchema","Yup","nameFilm","min","max","required","_Fragment","Formik","initialValues","onSubmit","_ref3","resetForm","trim","toLowerCase","validateOnChange","validateOnBlur","validationSchema","type","placeholder","FcSearch","ErrorMessage","render","msg","validationRequest","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","listMovies","setListMovies","_useState3","_useState4","error","setError","_useState5","_useState6","setName","useEffect","movieQuery","get","controller","AbortController","_fetchData","apply","arguments","fetchData","abort","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getMovies","results","wrap","_context","prev","next","showLoading","getMovies","action","params","query","signal","sent","length","abrupt","findMovies","t0","axios","isCancel","message","loadingRemove","finish","stop","Searchbar","movie","MoviesList","BadRequest","BASE_URL","BASE_PARAMS","timeout","language","api_key","headers","accept","_x","_getMovies","_ref$movieId","movieId","_ref$controller","_ref$params","_yield$axios$get","data","_objectSpread","searchEndpoint"],"sourceRoot":""}